import * as https from "https";
import * as URLParser from "url";

const getProxyParametersFromEnvironmentVariables = () => {
  const url = process.env["bespoken_proxy_url"];
  const proxy_secret = process.env["bespoken_proxy_secret"];

  if (url == null) {
    throw Error("Missing expected environment variable: 'bespoken_proxy_url");
  }

  if (proxy_secret == null) {
    throw Error(
      "Missing expected environment variable: 'bespoken_proxy_secret"
    );
  }

  // get lambda handler path from environment variables -- _HANDLER appears to be injected into environment by something in AWS lambda?
  // TODO: confirm this isn't API gateway specific ...
  const lambdaHandler = process.env["_HANDLER"];

  if (lambdaHandler == null) {
    throw Error("Missing expected environment variable: _HANDLER");
  }

  return {
    url,
    handler: lambdaHandler,
    proxy_secret
  };
};

export const passThruHandler = (event: any, _: any, callback: any) => {
  try {
    console.log("Lambda invoked in passthru mode", event);

    const {
      url,
      handler,
      proxy_secret
    } = getProxyParametersFromEnvironmentVariables();

    const parts = URLParser.parse(url);
    const post_data = JSON.stringify(event);

    // An object of options to indicate where to post to
    const post_options = {
      host: parts.hostname,
      port: parts.port || 443,
      path: `/${handler}`,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Content-Length": post_data.length,
        "bespoken-key": proxy_secret
      }
    };

    console.log("proxying request:", post_options);

    // Initiate the request to the bespoken proxy endpoint
    const req = https.request(post_options, function(res) {
      var body = "";
      // Data may be chunked
      res.on("data", function(chunk) {
        body += chunk;
      });
      res.on("end", function() {
        // When data is done, finish the request
        callback(null, JSON.parse(body));
      });
    });

    req.on("error", function(e) {
      callback("problem with request: " + e.message);
    });

    // Send the JSON data
    req.write(post_data);
    req.end();
  } catch (e) {
    callback("Exception: " + e);
  }
};
